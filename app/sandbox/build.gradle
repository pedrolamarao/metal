// project

plugins
{
    id 'dev.nokee.cpp-application'
    id 'br.dev.pedrolamarao.gdb'
}

application
{
    // #XXX: Nokee can't cross compile to system "none"
    final none = org.gradle.internal.os.OperatingSystem.current().getName()
    targetMachines = [ machines.os(none).architecture('-multiboot-x86_32') ]

    dependencies
    {
        implementation project(':multiboot2')
        implementation project(':x86')
    }

    final baseArgs = [ '-std=c++20', '-flto', '-fasm-blocks', '-gdwarf', '-masm=intel' ]

    binaries.configureEach {
        compileTasks.configureEach {
            compilerArgs.addAll baseArgs
        }
        linkTask.get().with {
            linkerArgs.addAll baseArgs
            linkerArgs.addAll '-Wl,-Ttext=0x1000', '-Wl,--entry=__multiboot2_start'
        }
    }
}

final createImage = tasks.register('createImage', CreateMultibootImage) {
    group = 'psys'
    dependsOn assemble
    inputFile = providers.provider {
        application.binaries
            .filter { it.isBuildable() }
            .map { it.get(0).linkTask.get().linkedFile.get() }
            .get()
    }
}

tasks.register('runImage', RunMultibootImage) {
    group = 'psys'
    imageFile = createImage.get().outputFile
}