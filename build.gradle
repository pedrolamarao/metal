// settings

plugins
{
    id 'aasgard.asm' version '0.1.0-SNAPSHOT' apply false
    id 'aasgard.gdb' version '0.1.0-SNAPSHOT' apply false
    id 'aasgard.grub' version '0.1.0-SNAPSHOT' apply false
    id 'pl.gradle-qemu' version '0.2.0-SNAPSHOT' apply false
    id 'base'
}

// project

ext.tools = new Properties().tap { it.load( file('tools.properties').newReader() ) }

ext.toolsDir = "${projectDir}/tools"

subprojects 
{
    model 
    {
        toolChains 
        {
            i386_elf(Clang)
            {
                path tools['br.dev.pedrolamarao.psys.llvm.path']
                eachPlatform {
                    assembler.executable 'clang'
                    assembler.withArguments { addAll '-target', 'i386-elf' }
                    cCompiler.executable 'clang'
                    cCompiler.withArguments { addAll '-target', 'i386-elf', '-nostdinc', '-ffreestanding' }
                    cppCompiler.executable 'clang++'
                    cppCompiler.withArguments { addAll '-target', 'i386-elf', '-nostdinc', '-ffreestanding' }
                    linker.executable 'clang'
                    linker.withArguments { addAll '-target', 'i386-linux-elf', '-fuse-ld=lld', '-nostdlib' }
                    staticLibArchiver.executable 'llvm-ar'
                }
            }
        }
    }
    
    tasks.register('qemuUserTest')

    tasks.register('qemuSystemTest')
}

// tasks

assemble.dependsOn gradle.includedBuilds *.task(':assemble')

build.dependsOn gradle.includedBuilds *.task(':build')

check.dependsOn gradle.includedBuilds *.task(':check')

clean.dependsOn gradle.includedBuilds *.task(':clean')
