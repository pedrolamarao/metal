// settings

plugins
{
    id 'aasgard.asm' version '0.1.0-SNAPSHOT' apply false
    id 'aasgard.gdb' version '0.1.0-SNAPSHOT' apply false
    id 'aasgard.grub' version '0.1.0-SNAPSHOT' apply false
    id 'pl.gradle-qemu' version '0.2.0-SNAPSHOT' apply false
    id 'base'
}

// project

def foo = "${projectDir}/tools"

subprojects 
{
    model 
    {
        toolChains 
        {
            tools(Gcc)
            {
                eachPlatform {
                    path "${foo}/usr/bin", "${foo}/usr/i686-pc-elf/bin"
                    assembler.executable 'i686-pc-elf-gcc'
                    cCompiler.executable 'i686-pc-elf-gcc'
                    cppCompiler.executable 'i686-pc-elf-g++'
                    linker.executable 'i686-pc-elf-gcc'
                    // linker.withArguments { args -> args << '-v' }
                    staticLibArchiver.executable 'i686-pc-elf-ar'
                }
            }
        }
    }
    
    tasks.register('qemuUserTest')

    tasks.register('qemuSystemTest')
}

// tasks

assemble.dependsOn gradle.includedBuilds *.task(':assemble')

build.dependsOn gradle.includedBuilds *.task(':build')

check.dependsOn gradle.includedBuilds *.task(':check')

clean.dependsOn gradle.includedBuilds *.task(':clean')
