plugins
{
    id 'cpp'
    id 'br.dev.pedrolamarao.gdb' apply false
}

subprojects 
{
    // settings

    apply plugin: AsmLanguage
    apply plugin: 'br.dev.pedrolamarao.gdb'
    apply plugin: 'cpp-application'
    
    // project
    
    application
    {
        // #XXX: gradle can't cross compile to system "any"
        targetMachines = [ machines.linux.x86, machines.windows.x86 ]
        
        dependencies
        {
            implementation project(':multiboot2')
            implementation project(':pc')
            implementation project(':x86')
        }
    
        binaries.whenElementFinalized { binary ->
        
            def compiler = compileTask.get()
            compiler.compilerArgs.addAll '-std=c++20', '-Werror', '-Wall', '-Wno-unused-private-field'
            
            def linker = linkTask.get()
            linker.linkerArgs.addAll '-std=c++20', '-Wl,-Ttext=0x1000'
    
            def suffix = binary.name.capitalize()

            final createRescue = project.tasks.register("createRescue${suffix}", CreateMultibootRescue) {
                group = 'psys'
                inputFile = binary.executableFile
            }

            project.tasks.register("runRescue${suffix}", RunMultibootRescue) {
                group = 'psys'
                imageFile = createRescue.get().outputFile
            }

            def testRescue = project.tasks.register("testRescue${suffix}", TestMultibootRescue) {
                group = 'psys'
                executableFile = binary.executableFile
                imageFile = createRescue.get().outputFile
            }
            
            // #XXX: add "debug" variant to qemuSystemTest
            if (! binary.optimized) { qemuSystemTest.dependsOn testRescue }
        }
    }
}
